#!/bin/bash
#
# build with each configure option
#
package=samplecat
version=0.3.0
tarball=${package}-${version}.tar.gz
tmpdir=/tmp/${package}_build

options=(
" "
--enable-debug
--enable-system-gtkglext
--disable-mysql
--disable-dock
--disable-ffmpeg
--disable-gplayer
--disable-jack
--disable-ayyidbus
--enable-ayyi
--enable-test
--disable-fftw
--disable-libass
--disable-dnotify
--enable-webkit
--enable-gl-app
--enable-mx
--enable-aubio
--disable-opengl
)

set -e

declare -i n_tests_complete=0;

SETCOLOR_GREEN="echo -en \\033[1;32m"
SETCOLOR_YELLOW="echo -en \\033[1;32m"
SETCOLOR_FAILURE="echo -en \\033[1;31m"
SETCOLOR_NORMAL="echo -en \\033[0;39m"

function get_tarball_1 {
	make dist || exit $?
	cp $tarball $tmpdir;
}

function get_tarball_2 {
	cd ${tmpdir}

	if [ ! -f $tarball ]; then
		if `wget http://www.orford.org/assets/$tarball`; then
			echo "wget exit status non-zero ?"
			:
		else
			echo "wget exit status 0 ?"
			exit;
		fi;
	else
		echo tarball found
	fi;
}

mkdir -p ${tmpdir};
rm -rf $tmpdir/${package}-${version}

function compile {
	echo ""
	${SETCOLOR_YELLOW}; echo "compile: "$1; ${SETCOLOR_NORMAL};
	./configure $1 && \
	make clean && \
	make
	exit_status=$?
	if [ ${exit_status} -ne 0 ]; then
		${SETCOLOR_FAILURE}; echo -en "fail! "; ${SETCOLOR_NORMAL}; echo $1;
		abort="true"
	else
		n_tests_complete=$n_tests_complete+1
		echo "ok"
	fi
	return $exit_status
}

get_tarball_1 && \
	cd ${tmpdir} && \
	echo "got tarball. extracting..." && \
	echo "" && \
	tar xf $tarball && \
	cd ${package}-${version} && \
	echo "" && \
	for i in "${options[@]}"; do compile "$i" || break; done && \
	echo "" && \

if [ "$abort" = "true" ]
then
	echo "complete: "$n_tests_complete" / "${#options[@]}
else
	${SETCOLOR_YELLOW} && echo "All builds completed successfully" && ${SETCOLOR_NORMAL};
	echo "complete="$n_tests_complete
fi

